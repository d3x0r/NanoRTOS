          if (temp->Tracking.Side)
          {
            if (display_work)
              displayln(nodes,"Out *n\n",status);
            while (status&ODDBUSY)
            {
              Relinquish(0L);
              if (!temp->Node.Node_Address)
                goto end_node;
            }
            status|=ODDBUSY;
            if (display_work)
              displayln(nodes,"*H Deposited\n",temp->Node.Node_Address);
            {
              do
              {

                while ((read_port(STATUS)&0x1c00)||(read_port(IN_SELECT)&0x2))
                          /*while Interal/Busy/external
                           or inprocess of being made busy*/
                {
                  Relinquish(0L);
                  if (!temp->Node.Node_Address)
                    goto end_node;
                }
                send_mail(PC_mail_out,temp);
              }
              while ((read_port(STATUS)&0x1c00)||(read_port(IN_SELECT)&0x2));
                                                                  /*check status
                                                                   to make sure that
                                                                   it really is
                                                                   safe. */
              out_port(CONTROL,control|EXTERNAL_ODD);  /*give him the external*/
              if (display_work)
                   displayln(nodes,"SI ");
              switch(temp->Return.Opcode)
              {
                case SLOUGH:
                  temp->Tracking.Status&=~WORK_IN_MAIL;
                  break;
                case COMPLETE:
                  if (temp->Data)
                  {
                    if (display_work)
                      displayln(nodes,"SN ");
                    Send(temp->Data,temp->Return.Byte_count);
                    if (temp->Tracking.Status&TERM_WHEN_DONE)
                      out_port(CONTROL,control|EXTERNAL_ODD);
                  }
                  if (display_work)
                    displayln(nodes,"UL ");
                  destroy(temp);
                  break;
              }
            }
            status&=~ODDBUSY;
          }
          else
          {
            if (display_work)
              displayln(nodes,"In *n\n",status);
            while (status&(EVENBUSY))
            {
              Relinquish(0L);
              if (!temp->Node.Node_Address)
                goto end_node;
            }
            status|=EVENBUSY;
            if (display_work)
              displayln(nodes,"*H Deposited\n",temp->Node.Node_Address);
            {
              do
              {
                while ((read_port(STATUS)&0x1c)||(read_port(OUT_SELECT)&0x2))
                          /*while Interal/Busy/external
                           or inprocess of being made busy*/
                  Relinquish(0L);
                send_mail(PC_mail_in,temp);
              }
              while ((read_port(STATUS)&0x1c)||(read_port(OUT_SELECT)&0x2));
                   /*check status to make sure that it really is safe. */

              out_port(CONTROL,control|EXTERNAL_EVEN);  /*give him the external*/
              switch(temp->Return.Opcode)
              {
                case SLOUGH:
                  temp->Tracking.Status&=~WORK_IN_MAIL;
                  break;
                case COMPLETE:
                  destroy(temp);
                  break;
              }
            }
            status&=~EVENBUSY;
          }
